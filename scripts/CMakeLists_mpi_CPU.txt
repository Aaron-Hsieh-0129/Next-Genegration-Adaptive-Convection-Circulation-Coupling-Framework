cmake_minimum_required(VERSION 3.5.0)

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

project(TMIF VERSION 1.0.0 LANGUAGES CXX Fortran)

set(HOME_DIR $ENV{HOME})

# Find MPI package
find_package(MPI REQUIRED)

# Set MPI compilers
set(CMAKE_C_COMPILER ${MPI_C_COMPILER})
set(CMAKE_CXX_COMPILER ${MPI_CXX_COMPILER})
set(CMAKE_Fortran_COMPILER ${MPI_Fortran_COMPILER})


set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

# Option to enable or disable PETSc
option(USE_PETSC "Enable PETSc support" OFF)

if(USE_PETSC)
    # Set root location to find PETSc's pkg-config
    set(PETSC $ENV{PETSC_DIR})
    set(ENV{PKG_CONFIG_PATH} ${PETSC}/lib/pkgconfig)

    # Find PETSc using pkg-config
    find_package(PkgConfig REQUIRED)
    pkg_search_module(PETSC REQUIRED IMPORTED_TARGET PETSc)
endif()

# Remove OpenMP since we're using MPI
# find_package(OpenMP)
# if (OPENMP_FOUND)
#     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
#     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
#     set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} ${OpenMP_Fortran_FLAGS}")
#     set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
# endif()

# Set Fortran compiler flags
# set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -cpp -fPIC -fdefault-real-8")
set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -cpp -r8")

# Enable exporting compile commands
set(CMAKE_EXPORT_COMPILE_COMMANDS True)

# Include directories
include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}/2DVVM/include
    ${HOME_DIR}/local/include
    ${MPI_INCLUDE_PATH}
)

# Add PETSc include directories only if PETSc is enabled
if(USE_PETSC)
    include_directories(${HOME_DIR}/local/petsc/include)
endif()

# Source files (C++ files)
file(GLOB_RECURSE SRC_CXX CSSWM/src/*.cpp CSSWM/src/*.hpp 2DVVM/src/*.cpp 2DVVM/src/*.hpp src/*.cpp src/*.hpp)

# Delete the main.cpp files from the 2DVVM and CSSWM directories
list(REMOVE_ITEM SRC_CXX ${CMAKE_CURRENT_SOURCE_DIR}/2DVVM/src/main.cpp)
list(REMOVE_ITEM SRC_CXX ${CMAKE_CURRENT_SOURCE_DIR}/CSSWM/src/main.cpp)

# Fortran source files
file(GLOB_RECURSE SRC_Fortran 2DVVM/src/*.f90)

# Create a shared library for Fortran code
if(SRC_Fortran)
    add_library(fortran_lib SHARED ${SRC_Fortran})
    set_target_properties(fortran_lib PROPERTIES OUTPUT_NAME "fortran_lib")
endif()

# Add the executable target
add_executable(TMIF ${SRC_CXX})

# Link Fortran library and runtime to the executable
if(SRC_Fortran)
    target_link_libraries(TMIF PRIVATE fortran_lib gfortran)
    add_dependencies(TMIF fortran_lib)
endif()

# Link MPI libraries
target_link_libraries(TMIF PRIVATE ${MPI_CXX_LIBRARIES} ${MPI_Fortran_LIBRARIES})

# Link PETSc libraries if PETSc is enabled
if(USE_PETSC)
    target_link_libraries(TMIF PRIVATE PkgConfig::PETSC)
endif()

# Find and link other libraries
find_library(libncPath netcdf "${HOME_DIR}/local/lib")
find_library(libncxxPath netcdf_c++4 "${HOME_DIR}/local/lib")
find_library(libpetscPath petsc "${HOME_DIR}/local/petsc/lib")

target_link_libraries(TMIF PRIVATE ${libncPath} ${libncxxPath})

# Link PETSc libraries conditionally
if(USE_PETSC)
    target_link_libraries(TMIF PRIVATE ${libncPath} ${libncxxPath} ${libpetscPath})
endif()

# Add MPI compile flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${MPI_CXX_COMPILE_FLAGS}")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${MPI_C_COMPILE_FLAGS}")
set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} ${MPI_Fortran_COMPILE_FLAGS}")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${MPI_CXX_LINK_FLAGS}")

# CPack settings
set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
